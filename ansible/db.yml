- hosts: localhost
  connection: local
  become: yes

  vars:
    pgsql_conf_dir: /etc/postgresql/10/main

  tasks:
    - name: EDITOR を vim にする
      lineinfile:
        path: /home/{{ ansible_user }}/.bashrc
        regexp: ^export\s+EDITOR=
        line: export EDITOR=vim

    - name: 日本語関連パッケージをインストールする
      package: 'name={{ item }} state=present'
      with_items:
        - language-pack-ja-base
        - language-pack-ja
        - manpages-ja
        - manpages-ja-dev

    - name: システムの文字セットを日本語にする
      shell: localectl set-locale LANG=ja_JP.UTF-8 LANGUAGE="ja_JP:ja"
      when: "'ja_JP.UTF-8' != lookup('env','LANG')"

    - name: タイムゾーンを確認する
      shell: readlink /etc/localtime
      register: tz
      changed_when: false

    - name: タイムゾーンを東京標準時にする
      shell: >-
        ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime &&
        dpkg-reconfigure -f noninteractive tzdata
      when: "'/usr/share/zoneinfo/Asia/Tokyo' != tz.stdout"

    - name: 'SSHのポート番号を{{ ssh_port }}にする'
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: ^Port\s+[0-9]+$
        line: 'Port {{ ssh_port }}'
      notify: restart_ssh

    - name: PostgreSQLをインストールする
      package: name=postgresql state=present
    # Ubuntu 18.04 LTS の PostgreSQL 10.5 はデフォルトで「ssl = on」になっている

    - name: 'PostgreSQLのポート番号を{{ db_port }}にする'
      lineinfile:
        path: '{{ pgsql_conf_dir }}/postgresql.conf'
        regexp: ^port\s*=\s*[0-9]+
        line: 'port = {{ db_port }}'
      notify: restart_pgsql

    - name: PostgreSQLへ外部から接続できるようにする
      lineinfile:
        path: '{{ pgsql_conf_dir }}/postgresql.conf'
        regexp: ^listen_addresses\s*=
        # ここで絞るとセキュリティグループとの二重管理になるので全開放で良い
        line: "listen_addresses = '*'"
      notify: restart_pgsql

    - name: PostgreSQLへ外部からログインできるようにする
      lineinfile:
        path: '{{ pgsql_conf_dir }}/pg_hba.conf'
        regexp: hostssl\s+all\s+
        line: hostssl all all 0.0.0.0/0 md5
      notify: restart_pgsql

    - name: PostgreSQLのエンコーディングを確認する
      become: yes
      become_user: postgres
      shell: >-
        psql -c '\pset tuples_only' -c '\pset format unaligned'
        -c "select pg_encoding_to_char(encoding), datcollate from pg_catalog.pg_database where datname = 'template1'" |
        tail -1
      register: pgsqlEncoding
      changed_when: false

    - name: PostgreSQLのエンコーディングを修正する
      when: "'UTF8|C' != pgsqlEncoding.stdout"
      become: yes
      become_user: postgres
      shell: 'psql -c "{{ item }}"'
      with_items:
        - "UPDATE pg_database SET datistemplate = FALSE WHERE datname = 'template1'"
        - DROP DATABASE template1
        - CREATE DATABASE template1 WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'C' LC_CTYPE = 'C'
        - "UPDATE pg_database SET datistemplate = TRUE WHERE datname = 'template1'"

  handlers:
    - name: restart_ssh
      service: name=ssh state=restarted
    - name: restart_pgsql
      service: name=postgresql state=restarted
